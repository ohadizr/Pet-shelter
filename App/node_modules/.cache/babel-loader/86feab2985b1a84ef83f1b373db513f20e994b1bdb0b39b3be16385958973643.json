{"ast":null,"code":"var _jsxFileName = \"/Users/ohad/Desktop/GitCollaborationDemo/pat-addoption-ohadizr/App/src/AuthContextProvider.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { createContext } from \"react\";\nimport localForage from \"localforage\";\nimport UserApi from \"./functions/UserApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nfunction AuthContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [authApiKey, setAuthApiKey] = useState('');\n  const [authName, setAuthName] = useState('');\n  const [authenticatedUser, setAuthenticatedUser] = useState(null);\n  async function getFromLocalForge() {\n    try {\n      const petCreed = await localForage.getItem('petCreed');\n      console.log(petCreed);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  //   useEffect(() => {\n  //       localForage.setItem('petCreed', {\n  //           key: authApiKey,\n  //           email: authName\n  //       });\n  //   }, [authApiKey, authName])\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authApiKey,\n      setAuthApiKey,\n      authName,\n      setAuthName\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthContextProvider, \"MIXAmLp8y3HrMvB5ynxeTJeC2q8=\");\n_c = AuthContextProvider;\nexport { AuthContext, AuthContextProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["useEffect","useState","createContext","localForage","UserApi","AuthContext","AuthContextProvider","children","authApiKey","setAuthApiKey","authName","setAuthName","authenticatedUser","setAuthenticatedUser","getFromLocalForge","petCreed","getItem","console","log","error"],"sources":["/Users/ohad/Desktop/GitCollaborationDemo/pat-addoption-ohadizr/App/src/AuthContextProvider.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { createContext } from \"react\";\nimport localForage from \"localforage\";\nimport UserApi from \"./functions/UserApi\";\n\nconst AuthContext = createContext();\n\nfunction AuthContextProvider({ children }) {\n  const [authApiKey, setAuthApiKey] = useState('');\n  const [authName, setAuthName] = useState('');\n  const [authenticatedUser, setAuthenticatedUser] = useState(null);\n\n\nasync function getFromLocalForge() {\n    try {\n      const petCreed = await localForage.getItem('petCreed');\n        console.log(petCreed);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n//   useEffect(() => {\n//       localForage.setItem('petCreed', {\n//           key: authApiKey,\n//           email: authName\n//       });\n//   }, [authApiKey, authName])\n  return (\n    <AuthContext.Provider value={{ authApiKey, setAuthApiKey, authName, setAuthName }}>\n    {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport { AuthContext, AuthContextProvider };\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,OAAO;AACrC,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,OAAO,MAAM,qBAAqB;AAAC;AAE1C,MAAMC,WAAW,gBAAGH,aAAa,EAAE;AAEnC,SAASI,mBAAmB,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAGlE,eAAea,iBAAiB,GAAG;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,WAAW,CAACa,OAAO,CAAC,UAAU,CAAC;MACpDC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACzB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB;EACF;;EAEF;EACA;EACA;EACA;EACA;EACA;EACE,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEX,UAAU;MAAEC,aAAa;MAAEC,QAAQ;MAAEC;IAAY,CAAE;IAAA,UACjFJ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACc;AAE3B;AAAC,GA1BQD,mBAAmB;AAAA,KAAnBA,mBAAmB;AA4B5B,SAASD,WAAW,EAAEC,mBAAmB;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}