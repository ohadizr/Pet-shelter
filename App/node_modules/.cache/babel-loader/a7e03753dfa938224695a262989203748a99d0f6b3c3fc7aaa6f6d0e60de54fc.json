{"ast":null,"code":"import React from \"react\";\nimport localforage from \"localforage\";\nimport { useNavigate } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nclass PetsApi extends React.Component {\n  async getPetData() {\n    const web = \"http://localhost:8000/pets\";\n    try {\n      const response = await fetch(web);\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async addPet(formData, id) {\n    const url = \"http://localhost:8000/addPet\";\n    const data = {\n      type: formData.type,\n      name: formData.name,\n      adoption_status: formData.adoption_status,\n      picture: \"https://w7.pngwing.com/pngs/68/852/png-transparent-catdog-season-2-cat-mammal-animals-cat-like-mammal-thumbnail.png\",\n      height: formData.height,\n      weight: formData.weight,\n      color: formData.color,\n      bio: formData.bio,\n      hypoallergenic: formData.hypoallergenic,\n      breed: formData.breed,\n      dietary_restrictions: formData.dietary_restrictions,\n      owner: id,\n      age: formData.age\n    };\n    console.log(data);\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    try {\n      const response = await fetch(url, options);\n      const json = await response.json();\n      console.log(json);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }\n  async getPetById(id) {\n    const web = `http://localhost:8000/pets/${id}`;\n    try {\n      const response = await fetch(web);\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async getPetByUserId(id) {\n    const web = `http://localhost:8000/pets/user/${id}`;\n    try {\n      const response = await fetch(web);\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async updatePet(id, pet) {\n    const web = `http://localhost:8000/pet/${id}`;\n    try {\n      const response = await fetch(web, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(pet)\n      });\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async filtered(input) {\n    console.log(\"input\", input);\n    const filter = {\n      type: input.type,\n      adoption_status: input.adoption_status,\n      height: input.height,\n      weight: input.weight,\n      age: input.age\n    };\n    console.log(\"filter\", filter);\n    const url = \"http://localhost:8000/pet\";\n    try {\n      const response = await fetch(url, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify()\n      });\n      const result = await response.json();\n      return result;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\nexport default PetsApi;","map":{"version":3,"names":["React","localforage","useNavigate","PropTypes","PetsApi","Component","getPetData","web","response","fetch","results","json","error","console","log","addPet","formData","id","url","data","type","name","adoption_status","picture","height","weight","color","bio","hypoallergenic","breed","dietary_restrictions","owner","age","options","method","headers","Accept","body","JSON","stringify","getPetById","getPetByUserId","updatePet","pet","filtered","input","filter","result"],"sources":["/Users/ohad/Desktop/GitCollaborationDemo/pat-addoption-ohadizr/App/src/Data/PetApi.jsx"],"sourcesContent":["import React from \"react\";\nimport localforage from \"localforage\";\nimport { useNavigate } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nclass PetsApi extends React.Component {\n  async getPetData() {\n    const web = \"http://localhost:8000/pets\";\n    try {\n      const response = await fetch(web);\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async addPet(formData, id) {\n    const url = \"http://localhost:8000/addPet\";\n\n    const data = {\n      type: formData.type,\n      name: formData.name,\n      adoption_status: formData.adoption_status,\n      picture:\n        \"https://w7.pngwing.com/pngs/68/852/png-transparent-catdog-season-2-cat-mammal-animals-cat-like-mammal-thumbnail.png\",\n      height: formData.height,\n      weight: formData.weight,\n      color: formData.color,\n      bio: formData.bio,\n      hypoallergenic: formData.hypoallergenic,\n      breed: formData.breed,\n      dietary_restrictions: formData.dietary_restrictions,\n      owner: id,\n      age: formData.age,\n    };\n    console.log(data);\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(data),\n    };\n    try {\n      const response = await fetch(url, options);\n      const json = await response.json();\n      console.log(json);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }\n\n  async getPetById(id) {\n    const web = `http://localhost:8000/pets/${id}`;\n    try {\n      const response = await fetch(web);\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getPetByUserId(id) {\n    const web = `http://localhost:8000/pets/user/${id}`;\n    try {\n      const response = await fetch(web);\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async updatePet(id, pet) {\n    const web = `http://localhost:8000/pet/${id}`;\n    try {\n      const response = await fetch(web, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(pet),\n      });\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async filtered(input) {\n    console.log(\"input\", input);\n    const filter = {\n      type: input.type,\n      adoption_status: input.adoption_status,\n      height: input.height,\n      weight: input.weight,\n      age: input.age,\n    };\n    console.log(\"filter\", filter);\n    const url = \"http://localhost:8000/pet\";\n\n    try {\n      const response = await fetch(url, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(),\n      });\n      const result = await response.json();\n      return result;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\nexport default PetsApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}