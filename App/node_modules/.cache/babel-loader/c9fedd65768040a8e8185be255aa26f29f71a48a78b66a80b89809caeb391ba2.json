{"ast":null,"code":"var _jsxFileName = \"/Users/ohad/Desktop/GitCollaborationDemo/pat-addoption-ohadizr/App/src/functions/UserApi.jsx\";\n//create Class component for all the API calls\nimport React from 'react';\nimport { useState } from 'react';\nimport { Grid } from '../assets/UiKit/grid/Gird';\nimport { Line, Rows } from '../assets/UiKit/Line/Line';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UserApi extends React.Component {\n  constructor(props) {\n    this.url = 'http://localhost:8000/';\n    super(props);\n    this.state = {\n      users: [],\n      loading: true,\n      error: false\n    };\n  }\n  async saveToken(token) {\n    try {\n      localStorage.setItem('token', token);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  //getToken from local storage\n  async getToken() {\n    try {\n      const token = localStorage.getItem('token');\n      return token;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // async componentDidMount() {\n  //     try {\n  //         const response = await fetch('http://localhost:8000/users');\n  //         const data = await response.json();\n  //         this.setState({ users: data, loading: false });\n  //     } catch (error) {\n  //         this.setState({ error: true, loading: false });\n  //     }\n  // }\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this);\n    }\n    if (this.state.error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"error...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.f_name, \" \", user.l_name]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n  //create a function to login user at http://localhost:8000/login\n  async login(email, password) {\n    try {\n      const response = await fetch(url + '/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      const data = await response.json();\n      //save token to local storage\n      saveToken(data.token);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\nexport default UserApi;","map":{"version":3,"names":["React","useState","Grid","Line","Rows","useNavigate","UserApi","Component","constructor","props","url","state","users","loading","error","saveToken","token","localStorage","setItem","console","log","getToken","getItem","render","map","user","f_name","l_name","id","login","email","password","response","fetch","method","headers","body","JSON","stringify","data","json"],"sources":["/Users/ohad/Desktop/GitCollaborationDemo/pat-addoption-ohadizr/App/src/functions/UserApi.jsx"],"sourcesContent":["//create Class component for all the API calls\nimport React from 'react';\nimport { useState } from 'react';\nimport { Grid } from '../assets/UiKit/grid/Gird';\nimport { Line, Rows } from '../assets/UiKit/Line/Line';\nimport { useNavigate } from 'react-router-dom';\nclass UserApi extends React.Component {\n    constructor(props) {\n        this.url = 'http://localhost:8000/';\n        super(props);\n        this.state = {\n        users: [],\n        loading: true,\n        error: false,\n        }\n    }\n    async saveToken(token) {\n        try {\n            localStorage.setItem('token', token)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    //getToken from local storage\n    async getToken() {\n        try {\n            const token = localStorage.getItem('token')\n            return token\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    \n\n    // async componentDidMount() {\n    //     try {\n    //         const response = await fetch('http://localhost:8000/users');\n    //         const data = await response.json();\n    //         this.setState({ users: data, loading: false });\n    //     } catch (error) {\n    //         this.setState({ error: true, loading: false });\n    //     }\n    // }\n    render() {\n\n        if (this.state.loading) {\n            return <div>loading...</div>;\n        }\n        if (this.state.error) {\n            return <div>error...</div>;\n        }\n        return (\n            <div>\n                <h1>Users</h1>\n                <ul>\n                    {this.state.users.map((user) => (\n                        <li key={user.id}>\n                            {user.f_name} {user.l_name}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n    //create a function to login user at http://localhost:8000/login\n    async login(email, password ) {\n        try {\n            const response = await fetch(url+'/login' , {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email: email,\n                password: password\n            })\n        })\n        const data = await response.json()\n        //save token to local storage\n        saveToken(data.token)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n}\n\nexport default UserApi;\n    "],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,2BAA2B;AAChD,SAASC,IAAI,EAAEC,IAAI,QAAQ,2BAA2B;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAC/C,MAAMC,OAAO,SAASN,KAAK,CAACO,SAAS,CAAC;EAClCC,WAAW,CAACC,KAAK,EAAE;IACf,IAAI,CAACC,GAAG,GAAG,wBAAwB;IACnC,KAAK,CAACD,KAAK,CAAC;IACZ,IAAI,CAACE,KAAK,GAAG;MACbC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACP,CAAC;EACL;EACA,MAAMC,SAAS,CAACC,KAAK,EAAE;IACnB,IAAI;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IACxC,CAAC,CAAC,OAAOF,KAAK,EAAE;MACZK,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;IACtB;EACJ;EACA;EACA,MAAMO,QAAQ,GAAG;IACb,IAAI;MACA,MAAML,KAAK,GAAGC,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;MAC3C,OAAON,KAAK;IAChB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACZK,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;IACtB;EACJ;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAS,MAAM,GAAG;IAEL,IAAI,IAAI,CAACZ,KAAK,CAACE,OAAO,EAAE;MACpB,oBAAO;QAAA,UAAK;MAAU;QAAA;QAAA;QAAA;MAAA,QAAM;IAChC;IACA,IAAI,IAAI,CAACF,KAAK,CAACG,KAAK,EAAE;MAClB,oBAAO;QAAA,UAAK;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAM;IAC9B;IACA,oBACI;MAAA,wBACI;QAAA,UAAI;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,eACd;QAAA,UACK,IAAI,CAACH,KAAK,CAACC,KAAK,CAACY,GAAG,CAAEC,IAAI,iBACvB;UAAA,WACKA,IAAI,CAACC,MAAM,EAAC,GAAC,EAACD,IAAI,CAACE,MAAM;QAAA,GADrBF,IAAI,CAACG,EAAE;UAAA;UAAA;UAAA;QAAA,QAGnB;MAAC;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA,QACH;EAEd;EACA;EACA,MAAMC,KAAK,CAACC,KAAK,EAAEC,QAAQ,EAAG;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACvB,GAAG,GAAC,QAAQ,EAAG;QAC5CwB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBR,KAAK,EAAEA,KAAK;UACZC,QAAQ,EAAEA;QACd,CAAC;MACL,CAAC,CAAC;MACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;MAClC;MACAzB,SAAS,CAACwB,IAAI,CAACvB,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACZK,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;IACtB;EACJ;AAEJ;AAEA,eAAeR,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}