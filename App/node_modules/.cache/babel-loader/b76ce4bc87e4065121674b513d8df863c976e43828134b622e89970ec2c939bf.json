{"ast":null,"code":"var _jsxFileName = \"/Users/ohad/Desktop/pet_adoption/App/src/AuthContextProvider.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { createContext, useEffect } from \"react\";\nimport localForage from \"localforage\";\nimport UserApi from \"./Data/UserApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst userApi = new UserApi();\nfunction AuthContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [token, setToken] = useState(\"\");\n  const [userData, setUserData] = useState([]);\n  const [isLogged, setIsLogged] = useState(false);\n  const [userDataStored, setUserDataStored] = useState(false);\n  async function getUserData() {\n    const petApp = await localForage.getItem(\"petApp\");\n    const data = await userApi.getUserById(petApp._id, petApp.token);\n    if (data.status === 200) {\n      setUserData(userData);\n      setUserDataStored(true);\n    }\n  }\n  getUserData();\n  async function validatePorcces() {\n    try {\n      const petApp = await localForage.getItem(\"petApp\");\n      const userData = await userApi.getUserById(petApp._id, petApp.token);\n      if (userData.status === 200) {\n        setUserData(userData);\n        setIsLogged(true);\n        setUserDataStored(true);\n      }\n      ;\n    } catch (error) {\n      // console.log(error);\n    }\n  }\n  if (!isLogged && userDataStored) {\n    // console.log(\"!isLogged && userDataStored\");\n    validatePorcces();\n  }\n  if (isLogged && !userDataStored) {\n    // console.log(\"isLogged && !userDataStored\");\n    getUserData();\n  }\n  if (!isLogged && !userDataStored) {\n    // console.log(\"!isLogged && !userDataStored\");\n    validatePorcces();\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      userDataStored,\n      userData,\n      setUserData,\n      isLogged,\n      setIsLogged\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthContextProvider, \"8KFmWRXtIVH4BXmAYFJ11yOCwsI=\");\n_c = AuthContextProvider;\nexport { AuthContext, AuthContextProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["useState","createContext","useEffect","localForage","UserApi","AuthContext","userApi","AuthContextProvider","children","token","setToken","userData","setUserData","isLogged","setIsLogged","userDataStored","setUserDataStored","getUserData","petApp","getItem","data","getUserById","_id","status","validatePorcces","error"],"sources":["/Users/ohad/Desktop/pet_adoption/App/src/AuthContextProvider.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { createContext ,useEffect } from \"react\";\nimport localForage from \"localforage\";\nimport UserApi from \"./Data/UserApi\";\n\nconst AuthContext = createContext();\nconst userApi = new UserApi();\nfunction AuthContextProvider({ children }) {\n  const [token, setToken] = useState(\"\");\n  const [userData, setUserData] = useState([]);\n  const [isLogged, setIsLogged] = useState(false);\n  const [userDataStored, setUserDataStored] = useState(false);\n\n  async function getUserData() {\n    const petApp = await localForage.getItem(\"petApp\");\n    const data = await userApi.getUserById(petApp._id, petApp.token);\n    \n    if (data.status === 200) {\n    setUserData(userData);\n    setUserDataStored(true);\n\n\n    }\n  }\n  getUserData() \n\n  async function validatePorcces(){\n    try {\n      const petApp = await localForage.getItem(\"petApp\");\n      const userData = await userApi.getUserById(petApp._id, petApp.token);\n      if (userData.status === 200) {\n\n      setUserData(userData);\n      setIsLogged(true);\n      setUserDataStored(true);\n      };\n    } catch (error) {\n      // console.log(error);\n    }\n  }\n  if (!isLogged && userDataStored) {\n    // console.log(\"!isLogged && userDataStored\");\n    validatePorcces()\n}\n  if (isLogged && !userDataStored) {\n    // console.log(\"isLogged && !userDataStored\");\n    getUserData();\n  }\n\n    if (!isLogged && !userDataStored) {\n      // console.log(\"!isLogged && !userDataStored\");\n      validatePorcces()\n    }  \n\n  return (\n    <AuthContext.Provider\n      value={{ userDataStored, userData, setUserData, isLogged, setIsLogged }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport { AuthContext, AuthContextProvider };\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,OAAO,MAAM,gBAAgB;AAAC;AAErC,MAAMC,WAAW,gBAAGJ,aAAa,EAAE;AACnC,MAAMK,OAAO,GAAG,IAAIF,OAAO,EAAE;AAC7B,SAASG,mBAAmB,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE3D,eAAeiB,WAAW,GAAG;IAC3B,MAAMC,MAAM,GAAG,MAAMf,WAAW,CAACgB,OAAO,CAAC,QAAQ,CAAC;IAClD,MAAMC,IAAI,GAAG,MAAMd,OAAO,CAACe,WAAW,CAACH,MAAM,CAACI,GAAG,EAAEJ,MAAM,CAACT,KAAK,CAAC;IAEhE,IAAIW,IAAI,CAACG,MAAM,KAAK,GAAG,EAAE;MACzBX,WAAW,CAACD,QAAQ,CAAC;MACrBK,iBAAiB,CAAC,IAAI,CAAC;IAGvB;EACF;EACAC,WAAW,EAAE;EAEb,eAAeO,eAAe,GAAE;IAC9B,IAAI;MACF,MAAMN,MAAM,GAAG,MAAMf,WAAW,CAACgB,OAAO,CAAC,QAAQ,CAAC;MAClD,MAAMR,QAAQ,GAAG,MAAML,OAAO,CAACe,WAAW,CAACH,MAAM,CAACI,GAAG,EAAEJ,MAAM,CAACT,KAAK,CAAC;MACpE,IAAIE,QAAQ,CAACY,MAAM,KAAK,GAAG,EAAE;QAE7BX,WAAW,CAACD,QAAQ,CAAC;QACrBG,WAAW,CAAC,IAAI,CAAC;QACjBE,iBAAiB,CAAC,IAAI,CAAC;MACvB;MAAC;IACH,CAAC,CAAC,OAAOS,KAAK,EAAE;MACd;IAAA;EAEJ;EACA,IAAI,CAACZ,QAAQ,IAAIE,cAAc,EAAE;IAC/B;IACAS,eAAe,EAAE;EACrB;EACE,IAAIX,QAAQ,IAAI,CAACE,cAAc,EAAE;IAC/B;IACAE,WAAW,EAAE;EACf;EAEE,IAAI,CAACJ,QAAQ,IAAI,CAACE,cAAc,EAAE;IAChC;IACAS,eAAe,EAAE;EACnB;EAEF,oBACE,QAAC,WAAW,CAAC,QAAQ;IACnB,KAAK,EAAE;MAAET,cAAc;MAAEJ,QAAQ;MAAEC,WAAW;MAAEC,QAAQ;MAAEC;IAAY,CAAE;IAAA,UAEvEN;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE3B;AAAC,GAtDQD,mBAAmB;AAAA,KAAnBA,mBAAmB;AAwD5B,SAASF,WAAW,EAAEE,mBAAmB;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}