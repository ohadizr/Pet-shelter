{"ast":null,"code":"var _jsxFileName = \"/Users/ohad/Desktop/GitCollaborationDemo/pat-addoption-ohadizr/App/src/functions/UserApi.jsx\";\n//create Class component for all the API calls\nimport React from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UserApi extends React.Component {\n  constructor(props) {\n    this.url = 'http://localhost:8000/';\n    super(props);\n    this.state = {\n      users: [],\n      f_name: '',\n      l_name: '',\n      email: '',\n      password: '',\n      password_validate: '',\n      phone_num: '',\n      bio: '',\n      loading: true,\n      error: false\n    };\n  }\n  async saveToken(token) {\n    try {\n      localStorage.setItem('token', token);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async getToken() {\n    try {\n      const token = localStorage.getItem('token');\n      return token;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async newUser(f_name, l_name, email, password, password_validate, phone_num, bio) {\n    try {\n      const response = await fetch('http://localhost:8000/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          f_name: f_name,\n          l_name: l_name,\n          email: email,\n          password: password,\n          password_validate: password_validate,\n          phone_num: phone_num,\n          bio: bio\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n      //save token to local storage\n      localStorage.setItem('token', data.token);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 20\n      }, this);\n    }\n    if (this.state.error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"error...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.f_name, \" \", user.l_name]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n  //create a function to login user at http://localhost:8000/login\n  async login(email, password) {\n    try {\n      const response = await fetch(this.url + '/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      const data = await response.json();\n      //save token to local storage\n      await this.saveToken(data.token);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\nexport default UserApi;","map":{"version":3,"names":["React","useState","useNavigate","UserApi","Component","constructor","props","url","state","users","f_name","l_name","email","password","password_validate","phone_num","bio","loading","error","saveToken","token","localStorage","setItem","console","log","getToken","getItem","newUser","response","fetch","method","headers","body","JSON","stringify","data","json","render","map","user","id","login"],"sources":["/Users/ohad/Desktop/GitCollaborationDemo/pat-addoption-ohadizr/App/src/functions/UserApi.jsx"],"sourcesContent":["//create Class component for all the API calls\nimport React from 'react';\nimport { useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\nclass UserApi extends React.Component {\n    constructor(props) {\n        this.url = 'http://localhost:8000/';\n        super(props);\n        this.state = {\n        users: [],\n        f_name: '',\n        l_name: '',\n        email: '',\n        password: '',\n        password_validate: '',\n        phone_num: '',\n        bio: '',\n        \n        loading: true,\n        error: false,\n        }\n    }\n    async saveToken(token) {\n        try {\n            localStorage.setItem('token', token)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    async getToken() {\n        try {\n            const token = localStorage.getItem('token')\n            return token\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    \n    async newUser(f_name, l_name, email, password, password_validate, phone_num, bio) {\n        try {\n          const response = await fetch('http://localhost:8000/signup' , {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n              f_name: f_name,\n              l_name: l_name,\n              email: email,\n              password: password,\n              password_validate: password_validate,\n              phone_num: phone_num,\n              bio: bio\n              \n            })\n      })\n      const data = await response.json()\n      console.log(data)\n      //save token to local storage\n      localStorage.setItem('token', data.token)\n      } catch (error) {\n          console.log(error)\n      }\n    }\n    \n    render() {\n\n        if (this.state.loading) {\n            return <div>loading...</div>;\n        }\n        if (this.state.error) {\n            return <div>error...</div>;\n        }\n        return (\n            <div>\n                <h1>Users</h1>\n                <ul>\n                    {this.state.users.map((user) => (\n                        <li key={user.id}>\n                            {user.f_name} {user.l_name}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n    //create a function to login user at http://localhost:8000/login\n    async login(email, password ) {\n        try {\n            const response = await fetch(this.url+'/login' , {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email: email,\n                password: password\n            })\n        })\n        const data = await response.json()\n        //save token to local storage\n        await this.saveToken(data.token)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n}\n\nexport default UserApi;\n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}