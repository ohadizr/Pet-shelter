{"ast":null,"code":"import React from \"react\";\nimport localforage from \"localforage\";\nimport { useNavigate } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nclass PetsApi extends React.Component {\n  async getPetData() {\n    const web = \"http://localhost:8000/pets\";\n    try {\n      const response = await fetch(web);\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  } //tested and working\n\n  async createPet(pet) {\n    const web = \"http://localhost:8000/pet\";\n    try {\n      const response = await fetch(web, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(pet)\n      });\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  } //untested\n\n  async getPetById(id) {\n    const web = `http://localhost:8000/pets/${id}`;\n    try {\n      const response = await fetch(web);\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  } //untested\n\n  async getPetByUserId(id) {\n    const web = `http://localhost:8000/pets/user/${id}`;\n    try {\n      const response = await fetch(web);\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  } //untested\n\n  async updatePet(id, pet) {\n    const web = `http://localhost:8000/pet/${id}`;\n    try {\n      const response = await fetch(web, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(pet)\n      });\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  } //untested\\\n\n  async filtered() {\n    const filter = {\n      type: \"cat\"\n    };\n    const url = \"http://localhost:8000/pet\";\n    try {\n      const response = await fetch(url, {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          filter\n        })\n      });\n      const result = await response.json();\n      return result;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\nexport default PetsApi;","map":{"version":3,"names":["React","localforage","useNavigate","PropTypes","PetsApi","Component","getPetData","web","response","fetch","results","json","error","console","log","createPet","pet","method","headers","body","JSON","stringify","getPetById","id","getPetByUserId","updatePet","filtered","filter","type","url","result"],"sources":["/Users/ohad/Desktop/GitCollaborationDemo/pat-addoption-ohadizr/App/src/Data/PetApi.jsx"],"sourcesContent":["import React from \"react\";\nimport localforage from \"localforage\";\nimport { useNavigate } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nclass PetsApi extends React.Component {\n  async getPetData() {\n    const web = \"http://localhost:8000/pets\";\n    try {\n      const response = await fetch(web);\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  } //tested and working\n\n  async createPet(pet) {\n    const web = \"http://localhost:8000/pet\";\n    try {\n      const response = await fetch(web, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(pet),\n      });\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  } //untested\n\n  async getPetById(id) {\n    const web = `http://localhost:8000/pets/${id}`;\n    try {\n      const response = await fetch(web);\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  } //untested\n\n  async getPetByUserId(id) {\n    const web = `http://localhost:8000/pets/user/${id}`;\n    try {\n      const response = await fetch(web);\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  } //untested\n\n  async updatePet(id, pet) {\n    const web = `http://localhost:8000/pet/${id}`;\n    try {\n      const response = await fetch(web, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(pet),\n      });\n      const results = await response.json();\n      return results;\n    } catch (error) {\n      console.log(error);\n    }\n  } //untested\\\n\n  async filtered() {\n    const filter= {type: \"cat\"}\n    const url = \"http://localhost:8000/pet\";\n\n    try {\n      const response = await fetch(url, {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({filter}),\n      });\n      const result = await response.json();\n      return result;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\nexport default PetsApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}