{"ast":null,"code":"var _jsxFileName = \"/Users/ohad/Desktop/GitCollaborationDemo/pat-addoption-ohadizr/App/src/Pages/Register.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  // let url=window.location.href\n  // const lastPartOfUrl= url.substring(url.lastIndexOf('/') + 1)\n\n  // const { authenticatedUser  } = useContext( ConfigContext);\n\n  // const [registerEmail, setRegisterEmail] = useState(\"\");\n  // const [registerPassWord, setRegisterPassword] = useState(\"\");\n  // const [confirmationPassWord, setConfirmationPassWordPassword] = useState(\"\");\n\n  // // const [photoURL, setPhotoURL] = useState(\"\");\n\n  // const [displayName, setDisplayName] = useState(\"\");\n  // const [error, setError] = useState(\"\");\n\n  // const provider = new GoogleAuthProvider();\n\n  // const register = async () => {\n  //   try {\n  //     const authenticatedUser = await createUserWithEmailAndPassword(\n  //     //   auth,\n  //       registerEmail,\n  //       registerPassWord\n  //     );\n  //     // localStorage.setItem(\"displayName\",displayName)\n  //     // localStorage.setItem(\"email\",registerEmail)\n  //     setError(\"\");\n\n  //   } catch (error) {\n  //     setError(error.message);\n  //   }\n  // };\n\n  // function handleSubmit(e) {\n  //   e.preventDefault();\n  //   registerPassWord === confirmationPassWord\n  //     ? register()\n  //     : setError(\n  //         \"ERROR: Your password and confirmation password do not match.\"\n  //       );\n  // }\n  // const signInWithGoogle =async()=>{\n  //   try {\n  //    return signInWithPopup(auth,provider).then((result) =>{\n  //       const name = result.user.displayName\n  //       const email = result.user.email\n  //       const profilePic = result.user.photoURL\n  //       localStorage.setItem(\"name\",name)\n  //       localStorage.setItem(\"email\",email)\n  //       localStorage.setItem(\"profilePic\",profilePic)\n  //     })\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Register"],"sources":["/Users/ohad/Desktop/GitCollaborationDemo/pat-addoption-ohadizr/App/src/Pages/Register.jsx"],"sourcesContent":["import React from 'react'\n\nexport default function Register() {\n    // let url=window.location.href\n    // const lastPartOfUrl= url.substring(url.lastIndexOf('/') + 1)\n   \n    // const { authenticatedUser  } = useContext( ConfigContext);\n\n    // const [registerEmail, setRegisterEmail] = useState(\"\");\n    // const [registerPassWord, setRegisterPassword] = useState(\"\");\n    // const [confirmationPassWord, setConfirmationPassWordPassword] = useState(\"\");\n\n    // // const [photoURL, setPhotoURL] = useState(\"\");\n\n    // const [displayName, setDisplayName] = useState(\"\");\n    // const [error, setError] = useState(\"\");\n  \n    // const provider = new GoogleAuthProvider();\n  \n    // const register = async () => {\n    //   try {\n    //     const authenticatedUser = await createUserWithEmailAndPassword(\n    //     //   auth,\n    //       registerEmail,\n    //       registerPassWord\n    //     );\n    //     // localStorage.setItem(\"displayName\",displayName)\n    //     // localStorage.setItem(\"email\",registerEmail)\n    //     setError(\"\");\n        \n    //   } catch (error) {\n    //     setError(error.message);\n    //   }\n    // };\n  \n    // function handleSubmit(e) {\n    //   e.preventDefault();\n    //   registerPassWord === confirmationPassWord\n    //     ? register()\n    //     : setError(\n    //         \"ERROR: Your password and confirmation password do not match.\"\n    //       );\n    // }\n    // const signInWithGoogle =async()=>{\n    //   try {\n    //    return signInWithPopup(auth,provider).then((result) =>{\n    //       const name = result.user.displayName\n    //       const email = result.user.email\n    //       const profilePic = result.user.photoURL\n    //       localStorage.setItem(\"name\",name)\n    //       localStorage.setItem(\"email\",email)\n    //       localStorage.setItem(\"profilePic\",profilePic)\n    //     })\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n  \n    // }\n  return (\n    <div>\n            <h2>Register User</h2>\n        {/* <form className=\"registerDiv\" onSubmit={handleSubmit}>\n        <label>User Name</label>\n          <input\n            className=\"inputStandard\"\n            type=\"text\"\n            required\n            placeholder=\"Enter full-name {first=> middle=>last}\"\n            onChange={(e) => {\n              e.preventDefault();\n              setDisplayName(e.target.value);\n            }}\n          />\n          <label>Profile Picture</label>\n          <input\n            className=\"inputStandard\"\n            type=\"file\"\n            placeholder=\"Enter Profile Picture URL\"\n            onChange={(e) => {\n              e.preventDefault();\n              setPhotoURL(e.target.value);\n            }}\n          />\n          <label>set Profile Picture</label>\n          <input\n            className=\"inputStandard\"\n            type=\"image\"\n            placeholder=\"*optional*\"\n            onChange={(e) => {\n              e.preventDefault();\n              setDisplayName(e.target.value);\n            }}\n          />\n          <label>Enter Email</label>\n          <input\n            className=\"inputStandard\"\n            type=\"email\"\n            required\n            placeholder=\"Enter Email\"\n            onChange={(e) => {\n              e.preventDefault();\n              setRegisterEmail(e.target.value);\n            }}\n          />\n          <label>Enter Password</label>\n          <input\n            className=\"inputStandard\"\n            type=\"password\"\n            required\n            placeholder=\"Enter Password\"\n            onChange={(e) => {\n              e.preventDefault();\n              setRegisterPassword(e.target.value);\n            }}\n          />\n          <label>Confirm Password</label>\n          <input\n            className=\"inputStandard\"\n            type=\"password\"\n            required\n            placeholder=\"Confirm Password\"\n            onChange={(e) => {\n              e.preventDefault();\n              setConfirmationPassWordPassword(e.target.value);\n            }}\n          />\n            <div className=\"submitOptions\">         \n          <button className=\"buttonStandard\" type=\"submit\">\n            Create User\n          </button>\n          <button \n          onClick={signInWithGoogle}\n           type=\"submit\"\n           className=\"iconButton\">\n          <img className=\"googleIcon\" src={GoogleIcon}/>\n          </button>\n        </div> \n          <div>\n            <h4>{error ? error : null}</h4>\n          </div>\n        </form> */}\n      \n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAEzB,eAAe,SAASC,QAAQ,GAAG;EAC/B;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACF,oBACE;IAAA,uBACQ;MAAA,UAAI;IAAa;MAAA;MAAA;MAAA;IAAA;EAAK;IAAA;IAAA;IAAA;EAAA,QAkFxB;AAEV;AAAC,KA9IuBA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}